plugins {
	id 'java'
	id 'eclipse'
	id 'jacoco'
	id 'com.github.spotbugs' version '1.6.4'
	id 'pmd'
}

repositories {
	jcenter()
}

dependencies {
	testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
	testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation 'org.hamcrest:hamcrest-library:1.3'
	compile 'pomeryt.myobjects:myobjects:4.1.0'
	compileOnly 'net.jcip:jcip-annotations:1.0'
	compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.3'
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat = 'full'
    }
    
    jacocoTestReport
}

jacocoTestReport {

    reports {

        xml.enabled true

        html.enabled false

    }

}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.90000
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

eclipse.project {
	natures 'org.eclipse.jdt.core.javanature'
  	natures 'org.eclipse.buildship.core.gradleprojectnature'
}

build.finalizedBy(jacocoTestReport)

spotbugs {
	toolVersion = '3.1.3'
	ignoreFailures = false
    effort = 'max'
}
tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		xml.enabled false
		html.enabled true
	}
}

pmd {
	toolVersion = '6.8.0'
	ignoreFailures = false
	ruleSetFiles = files("config/pmd/ruleSet.xml")
	ruleSets = []
}
tasks.withType(Pmd) {
	reports {
		xml.enabled false
		html.enabled true
	}
}